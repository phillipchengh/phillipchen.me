log_format upstream_logging '[$time_local] $remote_addr - $remote_user - $server_name to: "$upstream": "$request" upstream_response_time $upstream_response_time msec $msec request_time $request_time';

server {
  listen [::]:80;
  listen 80;

  server_name phillipchen.me www.phillipchen.me;

  # challenge used by cerbot
  location /.well-known/acme-challenge {
    allow all;
    root /var/www/certbot;
  }

  # redirect all http to https
  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen [::]:443 ssl http2 default_server;
  listen 443 ssl http2 default_server;

  server_name phillipchen.me www.phillipchen.me;

  # setting recommendation from https://foundryvtt.com/article/nginx/
  client_max_body_size 300M;

  # recommended https configurations
  ssl_certificate /etc/nginx/ssl/live/phillipchen.me/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/live/phillipchen.me/privkey.pem;
  ssl_trusted_certificate /etc/nginx/ssl/live/phillipchen.me/chain.pem;

  add_header Access-Control-Allow-Origin https://phillipchen.me always;

  location / {
    return 200 'I am a scrub.';
    add_header Content-Type text/plain;
  }

  # https://foundryvtt.com/article/nginx/
  # https://github.com/felddy/foundryvtt-docker/discussions/175
  location /foundry {
    # set DNS resolver as Docker Internal DNS for /foundry to pass to foundry docker hostname properly
    resolver 127.0.0.11 ipv6=off valid=10s;
    resolver_timeout 5s;

    # access logging in container for debugging nginx requests
    access_log /var/log/nginx/upstream_log upstream_logging;

    proxy_http_version 1.1;
    proxy_read_timeout 90;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;

    # WebSockets support
    proxy_set_header Connection "Upgrade";
    proxy_set_header Upgrade $http_upgrade;

    set $upstream http://foundry:30000;
    proxy_pass $upstream;
  }
}

